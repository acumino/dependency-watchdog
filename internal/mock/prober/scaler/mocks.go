// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/dependency-watchdog/internal/prober/scaler (interfaces: Scaler)

// Package scaler is a generated GoMock package.
package scaler

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockScaler is a mock of Scaler interface.
type MockScaler struct {
	ctrl     *gomock.Controller
	recorder *MockScalerMockRecorder
}

// MockScalerMockRecorder is the mock recorder for MockScaler.
type MockScalerMockRecorder struct {
	mock *MockScaler
}

// NewMockScaler creates a new mock instance.
func NewMockScaler(ctrl *gomock.Controller) *MockScaler {
	mock := &MockScaler{ctrl: ctrl}
	mock.recorder = &MockScalerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScaler) EXPECT() *MockScalerMockRecorder {
	return m.recorder
}

// ScaleDown mocks base method.
func (m *MockScaler) ScaleDown(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScaleDown", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ScaleDown indicates an expected call of ScaleDown.
func (mr *MockScalerMockRecorder) ScaleDown(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScaleDown", reflect.TypeOf((*MockScaler)(nil).ScaleDown), arg0)
}

// ScaleUp mocks base method.
func (m *MockScaler) ScaleUp(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScaleUp", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ScaleUp indicates an expected call of ScaleUp.
func (mr *MockScalerMockRecorder) ScaleUp(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScaleUp", reflect.TypeOf((*MockScaler)(nil).ScaleUp), arg0)
}
